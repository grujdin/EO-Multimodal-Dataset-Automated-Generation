<?xml version="1.0" encoding="utf-8"?>
<rdf:RDF
   xmlns:api="http://example.com/api#"
   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
   xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.tilingGrid__resolution">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.tilingGrid</api:usedInEndpoint>
    <rdfs:label>resolution</rdfs:label>
    <rdfs:comment>Output resolution in units of the tiling grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId.additionalData.extent__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}.additionalData.extent</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data.additionalData__maxMetersPerPixel">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>maxMetersPerPixel</rdfs:label>
    <rdfs:comment>How many meters per pixel can you request with Process/OGC/Batch requests for this collection.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest.input.bounds__geometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>geometry</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data.additionalData__bands">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>bands</rdfs:label>
    <rdfs:comment>Limited to 100 bands.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.data.properties__unit">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.data.properties</api:usedInEndpoint>
    <rdfs:label>unit</rdfs:label>
    <rdfs:comment>Units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data__coverGeometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>coverGeometry</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_async_process__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/async/process</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Status of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId.origin.crs.properties__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}.origin.crs.properties</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>CRS used by the tile, e.g. `urn:ogc:def:crs:EPSG::4326`</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest__evalscript">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest</api:usedInEndpoint>
    <rdfs:label>evalscript</rdfs:label>
    <rdfs:comment>Your evalscript. For details, click
&lt;a href="https://docs.sentinel-hub.com/api/latest/evalscript/v3/" target="_blank"&gt;here&lt;/a&gt;.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest__evalscript">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest</api:usedInEndpoint>
    <rdfs:label>evalscript</rdfs:label>
    <rdfs:comment>Your evalscript. For details, click
&lt;a href="https://docs.sentinel-hub.com/api/latest/evalscript/v3/" target="_blank"&gt;here&lt;/a&gt;.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId__datasetType">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}</api:usedInEndpoint>
    <rdfs:label>datasetType</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output.cogParameters__blockysize">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>blockysize</rdfs:label>
    <rdfs:comment>Corresponds to the *BLOCKYSIZE* parameter of [GDAL GTiff raster driver](https://gdal.org/drivers/raster/gtiff.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest.input.bounds.properties__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest.input.bounds.properties</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
    <rdfs:comment>The coordinate reference system of the coordinates. Must be
one of the values listed at https://docs.sentinel-hub.com/api/latest/api/process/crs/.
Default CRS is WGS84, http://www.opengis.net/def/crs/OGC/1.3/CRS84.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch_requestId_status__costPu">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch/{requestId}/status</api:usedInEndpoint>
    <rdfs:label>costPu</rdfs:label>
    <rdfs:comment>Cost of the request in processing units</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.tilingGrid__bufferX">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.tilingGrid</api:usedInEndpoint>
    <rdfs:label>bufferX</rdfs:label>
    <rdfs:comment>Will expand each output tile horizontally (on the left and the right) by number of pixels specified by this value. &lt;br&gt;&lt;br&gt; &lt;b&gt;Example:&lt;/b&gt; &lt;br&gt; If bufferX is 5, the output tile will be wider by 10 pixels. Coordinates of the tile are also moved accordingly by the number of pixels multiplied by resolution in each direction. However, the `tileWidthX` property returned by the API will **not** include the buffer.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest.input__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest.input</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId.bands__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}.bands</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Band identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Subscription ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data.tileGeometry__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data.tileGeometry</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__lastUpdated">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>lastUpdated</rdfs:label>
    <rdfs:comment>Last updated time of the request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__zattrs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>zattrs</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data.envelope__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data.envelope</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location__catalogUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location</api:usedInEndpoint>
    <rdfs:label>catalogUrl</rdfs:label>
    <rdfs:comment>Catalog API url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId.location__wmsUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>wmsUrl</rdfs:label>
    <rdfs:comment>WMS Service url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__completionPercentage">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>completionPercentage</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_tiles.data__deliveryId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>deliveryId</rdfs:label>
    <rdfs:comment>Tile ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest.input__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest.input</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__width">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>width</rdfs:label>
    <rdfs:comment>Width of the ingested Zarr collection in pixels.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_confirm__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/confirm</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>BYOC collection ID. If given at order creation, requested data is imported into referenced collection, which must be compatible with the data being ordered - that is, must either be empty or contain the same bands as the data being ordered.

If not given at order creation, a new BYOC collection is created when the order is confirmed and its ID is returned in the response from the `confirm` endpoint.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_tiles.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Tile ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_cancel__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/cancel</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Subscription ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_archive_status__size">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/archive/status</api:usedInEndpoint>
    <rdfs:label>size</rdfs:label>
    <rdfs:comment>Size of archive in bytes. Only provided for archives with status `DONE`.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__resolution">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>resolution</rdfs:label>
    <rdfs:comment>This parameter was moved to tilingGrid.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__completionPercentage">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>completionPercentage</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location__url">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location</api:usedInEndpoint>
    <rdfs:label>url</rdfs:label>
    <rdfs:comment>Endpoint url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output.cogParameters__blockysize">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>blockysize</rdfs:label>
    <rdfs:comment>Corresponds to the *BLOCKYSIZE* parameter of [GDAL GTiff raster driver](https://gdal.org/drivers/raster/gtiff.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__tileHeightPx">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>tileHeightPx</rdfs:label>
    <rdfs:comment>Tile height in pixels</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest.output__responses">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest.output</api:usedInEndpoint>
    <rdfs:label>responses</rdfs:label>
    <rdfs:comment>Response object.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId.origin.crs__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}.origin.crs</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>If provided, the results will be written as COG (cloud optimized GeoTIFFs) and added to the existing collection with the specified identifier. All outputs must be single-band and use the TIFF format. The collection must exist and be compatible -- that is, must contain bands equivalent to the batch request's outputs with the same bit depths. Only one of *createCollection* and *collectinId* may be specified. Requires `"cogOutput"=true`.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.data.properties__tileWidth">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.data.properties</api:usedInEndpoint>
    <rdfs:label>tileWidth</rdfs:label>
    <rdfs:comment>Width of each output tile, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output.cogParameters__overviewLevels">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>overviewLevels</rdfs:label>
    <rdfs:comment>Corresponds to the *levels* parameter of [gdaladdo](https://gdal.org/programs/gdaladdo.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data__path">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data</api:usedInEndpoint>
    <rdfs:label>path</rdfs:label>
    <rdfs:comment>The path within the bucket where the files are. Can also use
the '(BAND)' placeholder when the file names contain more than just
the band name.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest.input.bounds.properties__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest.input.bounds.properties</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
    <rdfs:comment>The coordinate reference system of the coordinates. Must be
one of the values listed at https://docs.sentinel-hub.com/api/latest/api/process/crs/.
Default CRS is WGS84, http://www.opengis.net/def/crs/OGC/1.3/CRS84.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location_locationId__catalogUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location/{locationId}</api:usedInEndpoint>
    <rdfs:label>catalogUrl</rdfs:label>
    <rdfs:comment>Catalog API url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids_id.properties__tileHeight">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids/{id}.properties</api:usedInEndpoint>
    <rdfs:label>tileHeight</rdfs:label>
    <rdfs:comment>Height of each output tile, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data.additionalData__maxMetersPerPixel">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data.additionalData</api:usedInEndpoint>
    <rdfs:label>maxMetersPerPixel</rdfs:label>
    <rdfs:comment>How many meters per pixel can you request with Process/OGC/Batch requests for this collection.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data__additionalData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data</api:usedInEndpoint>
    <rdfs:label>additionalData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_confirm__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/confirm</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data.additionalData__extent">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data.additionalData</api:usedInEndpoint>
    <rdfs:label>extent</rdfs:label>
    <rdfs:comment>The collection extent in WGS84.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest.input__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest.input</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest.output.responses__format">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>format</rdfs:label>
    <rdfs:comment>Format object
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId__location">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}</api:usedInEndpoint>
    <rdfs:label>location</rdfs:label>
    <rdfs:comment>Zarr Collection location</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids_id__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids/{id}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__userActionUpdated">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>userActionUpdated</rdfs:label>
    <rdfs:comment>Time of last user action update in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch_requestId_status__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch/{requestId}/status</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>Creation time of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_tiles_tileId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Tile ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics.data__error">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics.data</api:usedInEndpoint>
    <rdfs:label>error</rdfs:label>
    <rdfs:comment>If an error occurs when calculating statistics for a given interval it is reported here.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest.output.responses__format">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>format</rdfs:label>
    <rdfs:comment>Format object
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>Creation time of the request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.data__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.data</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest.input.bounds__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location_locationId__url">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location/{locationId}</api:usedInEndpoint>
    <rdfs:label>url</rdfs:label>
    <rdfs:comment>Endpoint url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output.cogParameters__resamplingAlgorithm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>resamplingAlgorithm</rdfs:label>
    <rdfs:comment>Corresponds to the value of the *-r* parameter of [gdaladdo](https://gdal.org/programs/gdaladdo.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__additionalData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>additionalData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Only INGESTED collections can be used in Process API.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId__additionalData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}</api:usedInEndpoint>
    <rdfs:label>additionalData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output__defaultTilePath">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output</api:usedInEndpoint>
    <rdfs:label>defaultTilePath</rdfs:label>
    <rdfs:comment>Path or path template specifying where batch processing results shall be stored. Supported formats: &lt;ul&gt;
  &lt;li&gt;a valid Amazon S3 URL, e.g. `s3://some-bucket/some/folder`.&lt;br/&gt;
    A subdirectory will be created for this batch request, named after the request ID, and will contain further subdirectories with the output tiles.
    This is equivalent to the template `s3://some-bucket/some/folder/&lt;requestId&gt;/&lt;tileName&gt;/&lt;outputId&gt;.&lt;format&gt;`.
  &lt;/li&gt;
  &lt;li&gt;a templated Amazon S3 URL, e.g. `s3://some-bucket/some/folder/&lt;tileName&gt;.tif`.
    Templating allows custom organization of the output files.
    Templates can contain the following placeholders, which are replaced by respective actual values when writing results:
    &lt;ul&gt;
      &lt;li&gt; `&lt;requestId&gt;` - the ID of your batch request,&lt;/li&gt;
      &lt;li&gt; `&lt;tileName&gt;` - the name (string ID) of the tile within the used tiling grid,&lt;/li&gt;
      &lt;li&gt; `&lt;tileId&gt;` - the numerical ID of the tile within the used tiling grid,&lt;/li&gt;
      &lt;li&gt; `&lt;outputId&gt;` - the output (raster) identifier (e.g. `default`),&lt;/li&gt;
      &lt;li&gt; `&lt;format&gt;` - the filename extension of the output's format (e.g. `tiff`).&lt;/li&gt;
    &lt;/ul&gt;
    The template must contain `&lt;tileName&gt;` or `&lt;tileId&gt;` in order to ensure unique output files.
    In case of multiple outputs, the template must also contain `&lt;outputId&gt;`.
  &lt;/li&gt;
&lt;/ul&gt; The request will fail if files already exist.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request__processRequest">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request</api:usedInEndpoint>
    <rdfs:label>processRequest</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__userAction">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>userAction</rdfs:label>
    <rdfs:comment>Last user action on the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data.additionalData__bands">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data.additionalData</api:usedInEndpoint>
    <rdfs:label>bands</rdfs:label>
    <rdfs:comment>Limited to 100 bands.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest.input.bounds.properties__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest.input.bounds.properties</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
    <rdfs:comment>The coordinate reference system of the coordinates. Must be
one of the values listed at https://docs.sentinel-hub.com/api/latest/api/process/crs/.
Default CRS is WGS84, http://www.opengis.net/def/crs/OGC/1.3/CRS84.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__lastUpdated">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>lastUpdated</rdfs:label>
    <rdfs:comment>Last updated time of the request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data.additionalData__toSensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>toSensingTime</rdfs:label>
    <rdfs:comment>The sensing time in ISO 8601 of the most recent tile.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_archive_status__deliveryId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/archive/status</api:usedInEndpoint>
    <rdfs:label>deliveryId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__stoppedStatusReason">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>stoppedStatusReason</rdfs:label>
    <rdfs:comment>Description of why job status is STOPPED</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output.cogParameters__resamplingAlgorithm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>resamplingAlgorithm</rdfs:label>
    <rdfs:comment>Corresponds to the value of the *-r* parameter of [gdaladdo](https://gdal.org/programs/gdaladdo.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request__processRequest">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request</api:usedInEndpoint>
    <rdfs:label>processRequest</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output__overwrite">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output</api:usedInEndpoint>
    <rdfs:label>overwrite</rdfs:label>
    <rdfs:comment>If `true`, the request will **never** fail if files already exist. Instead, any existing files will be overwritten, except if `skipExisting` is `true` and **all** outputs for a tile exist.

*Note:* checking for existing files can only be done if the task is estimated to output fewer than 5000 files, e.g. a task that produces 5 outputs per tile and is estimated to span over 1000 grid tiles is too big to check. Such big tasks must either: &lt;ul&gt;
  &lt;li&gt; ensure that the output path is unique to the task by including `&lt;taskId&gt;` in `defaultTilePath` and all `tilePath`s,&lt;/li&gt;
  &lt;li&gt; ensure that the output path is unique by using a simple, non-templated `defaultTilePath`, or&lt;/li&gt;
  &lt;li&gt; suppress overwrite checks by setting `overwrite` to `true` and `skipExisting` to `false`.&lt;/li&gt;
&lt;ul&gt;
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Current processing status of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__request">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>request</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__userActionUpdated">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>userActionUpdated</rdfs:label>
    <rdfs:comment>Time of last user action update in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Current processing status of the tile</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__ingestionErrors">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>ingestionErrors</rdfs:label>
    <rdfs:comment>Error message in case ingestion of the Zarr or any of its arrays failed.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
    <rdfs:comment>Specification of the subscribed data</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_confirm__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/confirm</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data.tileGeometry__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data.tileGeometry</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output__cogOutput">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output</api:usedInEndpoint>
    <rdfs:label>cogOutput</rdfs:label>
    <rdfs:comment>If `true`, the results will be written as COG (cloud optimized GeoTIFFs). All outputs must use the TIFF format and **cannot** use `sampleType` INT8. We also suggest setting the evalscript output object `nodataValue` (&lt;a href="https://docs.sentinel-hub.com/api/latest/evalscript/v3/#output-object-properties" target="_blank"&gt;more details&lt;/a&gt;) for correct overview generation.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output__defaultTilePath">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output</api:usedInEndpoint>
    <rdfs:label>defaultTilePath</rdfs:label>
    <rdfs:comment>Path or path template specifying where batch processing results shall be stored. Supported formats: &lt;ul&gt;
  &lt;li&gt;a valid Amazon S3 URL, e.g. `s3://some-bucket/some/folder`.&lt;br/&gt;
    A subdirectory will be created for this batch request, named after the request ID, and will contain further subdirectories with the output tiles.
    This is equivalent to the template `s3://some-bucket/some/folder/&lt;requestId&gt;/&lt;tileName&gt;/&lt;outputId&gt;.&lt;format&gt;`.
  &lt;/li&gt;
  &lt;li&gt;a templated Amazon S3 URL, e.g. `s3://some-bucket/some/folder/&lt;tileName&gt;.tif`.
    Templating allows custom organization of the output files.
    Templates can contain the following placeholders, which are replaced by respective actual values when writing results:
    &lt;ul&gt;
      &lt;li&gt; `&lt;requestId&gt;` - the ID of your batch request,&lt;/li&gt;
      &lt;li&gt; `&lt;tileName&gt;` - the name (string ID) of the tile within the used tiling grid,&lt;/li&gt;
      &lt;li&gt; `&lt;tileId&gt;` - the numerical ID of the tile within the used tiling grid,&lt;/li&gt;
      &lt;li&gt; `&lt;outputId&gt;` - the output (raster) identifier (e.g. `default`),&lt;/li&gt;
      &lt;li&gt; `&lt;format&gt;` - the filename extension of the output's format (e.g. `tiff`).&lt;/li&gt;
    &lt;/ul&gt;
    The template must contain `&lt;tileName&gt;` or `&lt;tileId&gt;` in order to ensure unique output files.
    In case of multiple outputs, the template must also contain `&lt;outputId&gt;`.
  &lt;/li&gt;
&lt;/ul&gt; The request will fail if files already exist.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__tileWidthPx">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>tileWidthPx</rdfs:label>
    <rdfs:comment>Tile width in pixels</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output__skipExisting">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output</api:usedInEndpoint>
    <rdfs:label>skipExisting</rdfs:label>
    <rdfs:comment>If `true`, any tiles for which **all** outputs already exist will be skipped. Tiles for which only **some** of the outputs exist will either be *fully overwritten* (if `overwrite` is `true`) or will cause the whole request to fail.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__processRequest">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>processRequest</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data.additionalData.extent__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data.additionalData.extent</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Order ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest.input__bounds">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest.input</api:usedInEndpoint>
    <rdfs:label>bounds</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids_id.properties__tileWidth">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids/{id}.properties</api:usedInEndpoint>
    <rdfs:label>tileWidth</rdfs:label>
    <rdfs:comment>Width of each output tile, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest.output__responses">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest.output</api:usedInEndpoint>
    <rdfs:label>responses</rdfs:label>
    <rdfs:comment>Response object.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_archive_status__requested">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/archive/status</api:usedInEndpoint>
    <rdfs:label>requested</rdfs:label>
    <rdfs:comment>Time of archiving request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest.input__bounds">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest.input</api:usedInEndpoint>
    <rdfs:label>bounds</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__s3Bucket">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>s3Bucket</rdfs:label>
    <rdfs:comment>The S3 bucket where the Zarr is stored.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics.data.interval__from">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics.data.interval</api:usedInEndpoint>
    <rdfs:label>from</rdfs:label>
    <rdfs:comment>ISO-8601 time representing start of search interval, e.g. 2019-01-31T14:00:00+01:00</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Unique identifier of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.additionalData__fromSensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.additionalData</api:usedInEndpoint>
    <rdfs:label>fromSensingTime</rdfs:label>
    <rdfs:comment>The sensing time in ISO 8601 of the least recent tile.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId.additionalData.extent__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}.additionalData.extent</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest__evalscript">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest</api:usedInEndpoint>
    <rdfs:label>evalscript</rdfs:label>
    <rdfs:comment>Your evalscript. For details, click
&lt;a href="https://docs.sentinel-hub.com/api/latest/evalscript/v3/" target="_blank"&gt;here&lt;/a&gt;.
&lt;br/&gt;Evalscript is not required here if using multipart upload.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId.bands__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}.bands</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Band identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__s3Bucket">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>s3Bucket</rdfs:label>
    <rdfs:comment>The S3 bucket where the Zarr is stored.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__zarrOutput">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>zarrOutput</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account that submitted the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_tiles_tileId__deliveryId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>deliveryId</rdfs:label>
    <rdfs:comment>Tile ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data.additionalData__maxMetersPerPixel">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>maxMetersPerPixel</rdfs:label>
    <rdfs:comment>How much meters per pixel can you request with Process/OGC/Batch requests for this collection. The limit is internally increased to 500, if it's less than that.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output.cogParameters__overviewLevels">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>overviewLevels</rdfs:label>
    <rdfs:comment>Corresponds to the *levels* parameter of [gdaladdo](https://gdal.org/programs/gdaladdo.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__processRequest">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>processRequest</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Only INGESTED collections can be used in Process API.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.tilingGrid__resolution">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.tilingGrid</api:usedInEndpoint>
    <rdfs:label>resolution</rdfs:label>
    <rdfs:comment>Output resolution in units of the tiling grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location_locationId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location/{locationId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Sentinel Hub deployment location identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest.output__responses">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest.output</api:usedInEndpoint>
    <rdfs:label>responses</rdfs:label>
    <rdfs:comment>Response object.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_confirm__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/confirm</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>BYOC collection ID. If given at subscription creation, the data is imported into referenced collection, which must be compatible with the data being subscribed - that is, must either be empty or contain the same bands as the data being subscribed.

If not given at subscription creation, a new BYOC collection is created when the subscription is confirmed and its ID is returned in the response from the `confirm` endpoint.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_cancel__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/cancel</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>BYOC collection ID. If given at subscription creation, the data is imported into referenced collection, which must be compatible with the data being subscribed - that is, must either be empty or contain the same bands as the data being subscribed.

If not given at subscription creation, a new BYOC collection is created when the subscription is confirmed and its ID is returned in the response from the `confirm` endpoint.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId.location__catalogUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>catalogUrl</rdfs:label>
    <rdfs:comment>Catalog API url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data.additionalData__toSensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>toSensingTime</rdfs:label>
    <rdfs:comment>The sensing time in ISO 8601 of the most recent tile.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId__location">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}</api:usedInEndpoint>
    <rdfs:label>location</rdfs:label>
    <rdfs:comment>Batch Collection location</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId.location__processUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>processUrl</rdfs:label>
    <rdfs:comment>Process API url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Order ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId.additionalData__extent">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}.additionalData</api:usedInEndpoint>
    <rdfs:label>extent</rdfs:label>
    <rdfs:comment>The collection extent in WGS84.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>Creation time of the request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest.output.responses__identifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>identifier</rdfs:label>
    <rdfs:comment>Response's identifier is used to connect the results of an evalscript with the output file.
Each response identifier value must either match one of the values in `setup()` -&gt; `output.id` in the evalscript (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#ndvi-image--and--value-multi-part-response-png-and-geotiff" target="_blank"&gt;example&lt;/a&gt;)
or be `userdata` (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#true-color-and-metadata-multi-part-response-geotiff-and-json" target="_blank"&gt;example&lt;/a&gt;).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids_id.properties__tileHeight">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids/{id}.properties</api:usedInEndpoint>
    <rdfs:label>tileHeight</rdfs:label>
    <rdfs:comment>Height of each output tile, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output.cogParameters__resamplingAlgorithm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>resamplingAlgorithm</rdfs:label>
    <rdfs:comment>Corresponds to the value of the *-r* parameter of [gdaladdo](https://gdal.org/programs/gdaladdo.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
    <rdfs:comment>Native CRS of the Zarr. See also [Sentinel Hub CRS support](https://docs.sentinel-hub.com/api/latest/api/process/crs/).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data__isConfigured">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>isConfigured</rdfs:label>
    <rdfs:comment>It's set to true, if the collection has bands.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Current processing status of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data.additionalData__bands">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data.additionalData</api:usedInEndpoint>
    <rdfs:label>bands</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest.input.bounds__bbox">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>bbox</rdfs:label>
    <rdfs:comment>The request bounding box. This and/or GEOMETRY must be specified.
Specify with a coordinate pair on two (opposite) vertices of the bounding
box rectangle. Coordinates need to be in easting,northing or longitude, latitude,
in that order in the CRS defined in the "bounds.properties.crs" parameter.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data.additionalData__fromSensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data.additionalData</api:usedInEndpoint>
    <rdfs:label>fromSensingTime</rdfs:label>
    <rdfs:comment>The sensing time in ISO 8601 of the least recent tile.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data.envelope__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data.envelope</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest.output__responses">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest.output</api:usedInEndpoint>
    <rdfs:label>responses</rdfs:label>
    <rdfs:comment>Response object.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>The date when the collection was created.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
    <rdfs:comment>Native CRS of the Zarr. See also [Sentinel Hub CRS support](https://docs.sentinel-hub.com/api/latest/api/process/crs/).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__request">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>request</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.tilingGrid__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.tilingGrid</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Id of one of the supported tiling grids</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest.output.responses__identifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>identifier</rdfs:label>
    <rdfs:comment>Response's identifier is used to connect the results of an evalscript with the output file.
Each response identifier value must either match one of the values in `setup()` -&gt; `output.id` in the evalscript (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#ndvi-image--and--value-multi-part-response-png-and-geotiff" target="_blank"&gt;example&lt;/a&gt;)
or be `userdata` (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#true-color-and-metadata-multi-part-response-geotiff-and-json" target="_blank"&gt;example&lt;/a&gt;).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_archive_create__format">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/archive/create</api:usedInEndpoint>
    <rdfs:label>format</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__request">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>request</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output.cogParameters__usePredictor">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>usePredictor</rdfs:label>
    <rdfs:comment>Whether predictor should be used for TIFF compression. If true, the predictor "2" will be passed to [GDAL GTiff raster driver](https://gdal.org/drivers/raster/gtiff.html) in case of integer output and "3" for FLOAT32 output. If false, the value "1" (no predictor) will be used.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_accountquotas.data__quotaSqkm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/accountquotas.data</api:usedInEndpoint>
    <rdfs:label>quotaSqkm</rdfs:label>
    <rdfs:comment>This is total purchased quota. Available quota is quotaSqkm - quotaUsed.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request__instanceType">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request</api:usedInEndpoint>
    <rdfs:label>instanceType</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.data__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.data</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId__batchData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}</api:usedInEndpoint>
    <rdfs:label>batchData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids_id__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids/{id}</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_archive_status__size">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/archive/status</api:usedInEndpoint>
    <rdfs:label>size</rdfs:label>
    <rdfs:comment>Size of archive in bytes. Only provided for archives with status `DONE`.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>The date and time when the collection was created.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data__sensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data</api:usedInEndpoint>
    <rdfs:label>sensingTime</rdfs:label>
    <rdfs:comment>The sensing time of the tile in ISO 8601 but without sub-millisecond precision.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Current processing status of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics.data.interval__to">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics.data.interval</api:usedInEndpoint>
    <rdfs:label>to</rdfs:label>
    <rdfs:comment>ISO-8601 time representing end of search interval, e.g. 2019-02-05T15:00:00+01:00.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output__cogOutput">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output</api:usedInEndpoint>
    <rdfs:label>cogOutput</rdfs:label>
    <rdfs:comment>If `true`, the results will be written as COG (cloud optimized GeoTIFFs). All outputs must use the TIFF format and **cannot** use `sampleType` INT8. We also suggest setting the evalscript output object `nodataValue` (&lt;a href="https://docs.sentinel-hub.com/api/latest/evalscript/v3/#output-object-properties" target="_blank"&gt;more details&lt;/a&gt;) for correct overview generation.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data__path">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>path</rdfs:label>
    <rdfs:comment>The path within the bucket where the files are. Can also use
the '(BAND)' placeholder when the file names contain more than just
the band name.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output__createCollection">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output</api:usedInEndpoint>
    <rdfs:label>createCollection</rdfs:label>
    <rdfs:comment>If `true`, the results will be written as COG (cloud optimized GeoTIFFs) and a collection will be automatically created. All outputs must be single-band and use the TIFF format. Only one of *createCollection* and *collectinId* may be specified. Requires `"cogOutput"=true`.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_confirm__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/confirm</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Order name. It's also used as a name for a new BYOC collection, if no collection is given in collectionId field.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data.origin.crs__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data.origin.crs</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__userAction">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>userAction</rdfs:label>
    <rdfs:comment>Last user action on the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data.additionalData__bands">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>bands</rdfs:label>
    <rdfs:comment>Limited to 100 bands.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId__s3Bucket">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}</api:usedInEndpoint>
    <rdfs:label>s3Bucket</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids_id__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids/{id}</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data.additionalData__hasSensingTimes">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>hasSensingTimes</rdfs:label>
    <rdfs:comment>Information if tiles have sensing time.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_archive_create__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/archive/create</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output__cogParameters">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output</api:usedInEndpoint>
    <rdfs:label>cogParameters</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId.location__catalogUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>catalogUrl</rdfs:label>
    <rdfs:comment>Catalog API url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>BYOC Collection identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data.additionalData__warnings">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data.additionalData</api:usedInEndpoint>
    <rdfs:label>warnings</rdfs:label>
    <rdfs:comment>Contains additional information about potential tile problems.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data.additionalData__storageIdentifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data.additionalData</api:usedInEndpoint>
    <rdfs:label>storageIdentifier</rdfs:label>
    <rdfs:comment>The identifier of the storage where the bucket resides.

For the default storage, you don't have to set this. The possible values are deployment-specific.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.data__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.data</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data__isConfigured">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data</api:usedInEndpoint>
    <rdfs:label>isConfigured</rdfs:label>
    <rdfs:comment>It's set to true, if the collection has bands.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_tiles.data__deliveryId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>deliveryId</rdfs:label>
    <rdfs:comment>Tile ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest.input__bounds">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest.input</api:usedInEndpoint>
    <rdfs:label>bounds</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.additionalData__hasSensingTimes">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.additionalData</api:usedInEndpoint>
    <rdfs:label>hasSensingTimes</rdfs:label>
    <rdfs:comment>Information if tiles have sensing time.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays_arrayName.data__zattrs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays/{arrayName}.data</api:usedInEndpoint>
    <rdfs:label>zattrs</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__tileCount">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>tileCount</rdfs:label>
    <rdfs:comment>Number of output tiles</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data.additionalData__fromSensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>fromSensingTime</rdfs:label>
    <rdfs:comment>The sensing time in ISO 8601 of the least recent tile.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data__additionalData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>additionalData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.zarrOutput__group">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.zarrOutput</api:usedInEndpoint>
    <rdfs:label>group</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request__description">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request</api:usedInEndpoint>
    <rdfs:label>description</rdfs:label>
    <rdfs:comment>Optional description that can be used to keep track of requests</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest.input.bounds__bbox">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>bbox</rdfs:label>
    <rdfs:comment>The request bounding box. This and/or GEOMETRY must be specified.
Specify with a coordinate pair on two (opposite) vertices of the bounding
box rectangle. Coordinates need to be in easting,northing or longitude, latitude,
in that order in the CRS defined in the "bounds.properties.crs" parameter.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
    <rdfs:comment>Specification of the ordered data</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account that submitted the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId__cost">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>cost</rdfs:label>
    <rdfs:comment>Tile processing cost (PU)</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_archive_create__size">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/archive/create</api:usedInEndpoint>
    <rdfs:label>size</rdfs:label>
    <rdfs:comment>Size of archive in bytes. Only provided for archives with status `DONE`.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__completionPercentage">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>completionPercentage</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Order name. It's also used as a name for a new BYOC collection, if no collection is given in collectionId field.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location_locationId__processUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location/{locationId}</api:usedInEndpoint>
    <rdfs:label>processUrl</rdfs:label>
    <rdfs:comment>Process API url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest__evalscript">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest</api:usedInEndpoint>
    <rdfs:label>evalscript</rdfs:label>
    <rdfs:comment>Your evalscript. For details, click
&lt;a href="https://docs.sentinel-hub.com/api/latest/evalscript/v3/" target="_blank"&gt;here&lt;/a&gt;.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_confirm__sqkm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/confirm</api:usedInEndpoint>
    <rdfs:label>sqkm</rdfs:label>
    <rdfs:comment>Area of the subscriptions's `input.bounds` in km&lt;sup&gt;2&lt;/sup&gt;</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections__s3Bucket">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections</api:usedInEndpoint>
    <rdfs:label>s3Bucket</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__costPU">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>costPU</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__zattrs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>zattrs</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest.output.responses__format">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>format</rdfs:label>
    <rdfs:comment>Format object
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays.data__path">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays.data</api:usedInEndpoint>
    <rdfs:label>path</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data.envelope__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data.envelope</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data.additionalData__hasSensingTimes">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data.additionalData</api:usedInEndpoint>
    <rdfs:label>hasSensingTimes</rdfs:label>
    <rdfs:comment>Information if tiles have sensing time.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays_arrayName.data__s3Bucket">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays/{arrayName}.data</api:usedInEndpoint>
    <rdfs:label>s3Bucket</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output.cogParameters__usePredictor">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>usePredictor</rdfs:label>
    <rdfs:comment>Whether predictor should be used for TIFF compression. If true, the predictor "2" will be passed to [GDAL GTiff raster driver](https://gdal.org/drivers/raster/gtiff.html) in case of integer output and "3" for FLOAT32 output. If false, the value "1" (no predictor) will be used.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__height">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>height</rdfs:label>
    <rdfs:comment>Height of the ingested Zarr collection in pixels.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location__wmsUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location</api:usedInEndpoint>
    <rdfs:label>wmsUrl</rdfs:label>
    <rdfs:comment>WMS Service url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__envelope">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>envelope</rdfs:label>
    <rdfs:comment>The area of coverage of the ingested Zarr collection, defined in its native CRS.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__tilingGridId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>tilingGridId</rdfs:label>
    <rdfs:comment>This parameter was moved to tilingGrid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest.output.responses__format">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>format</rdfs:label>
    <rdfs:comment>Format object
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest.output__responses">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest.output</api:usedInEndpoint>
    <rdfs:label>responses</rdfs:label>
    <rdfs:comment>Response object.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>Creation time of the request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__tileCount">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>tileCount</rdfs:label>
    <rdfs:comment>Number of output tiles</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_archive_create__format">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/archive/create</api:usedInEndpoint>
    <rdfs:label>format</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data__tileGeometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>tileGeometry</rdfs:label>
    <rdfs:comment>The tile bounding box in the CRS of the tile.
It's automatically set to the union of all file bounding boxes.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location_locationId___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location/{locationId}</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output.cogParameters__overviewMinSize">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>overviewMinSize</rdfs:label>
    <rdfs:comment>Corresponds to the *minsize* parameter of [gdaladdo](https://gdal.org/programs/gdaladdo.html).
Default value minimum of blockxsize and blockysize
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>BYOC collection ID. If given at order creation, requested data is imported into referenced collection, which must be compatible with the data being ordered - that is, must either be empty or contain the same bands as the data being ordered.

If not given at order creation, a new BYOC collection is created when the order is confirmed and its ID is returned in the response from the `confirm` endpoint.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.data__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.data</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
    <rdfs:comment>Specification of the subscribed data</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Subscription name. It's also used as a name for a new BYOC collection, if no collection is given in collectionId field.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays_arrayName.data__zarray">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays/{arrayName}.data</api:usedInEndpoint>
    <rdfs:label>zarray</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions__sqkm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions</api:usedInEndpoint>
    <rdfs:label>sqkm</rdfs:label>
    <rdfs:comment>Area of the subscriptions's `input.bounds` in km&lt;sup&gt;2&lt;/sup&gt;</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_confirm__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/confirm</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
    <rdfs:comment>Specification of the subscribed data</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>The date when the collection was created.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>Creation time of the request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_tiles.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Current processing status of the tile</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data.additionalData__extent">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>extent</rdfs:label>
    <rdfs:comment>The collection extent in WGS84.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__description">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>description</rdfs:label>
    <rdfs:comment>Optional description that can be used to keep track of requests</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest.output.responses__identifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>identifier</rdfs:label>
    <rdfs:comment>Response's identifier is used to connect the results of an evalscript with the output file.
Each response identifier value must either match one of the values in `setup()` -&gt; `output.id` in the evalscript (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#ndvi-image--and--value-multi-part-response-png-and-geotiff" target="_blank"&gt;example&lt;/a&gt;)
or be `userdata` (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#true-color-and-metadata-multi-part-response-geotiff-and-json" target="_blank"&gt;example&lt;/a&gt;).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_confirm__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/confirm</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Subscription name. It's also used as a name for a new BYOC collection, if no collection is given in collectionId field.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output.cogParameters__blockxsize">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>blockxsize</rdfs:label>
    <rdfs:comment>Corresponds to the *BLOCKXSIZE* parameter of [GDAL GTiff raster driver](https://gdal.org/drivers/raster/gtiff.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId.additionalData__hasSensingTimes">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}.additionalData</api:usedInEndpoint>
    <rdfs:label>hasSensingTimes</rdfs:label>
    <rdfs:comment>Information if tiles have sensing time.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_accountquotas_collectionId__quotaUsed">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/accountquotas/{collectionId}</api:usedInEndpoint>
    <rdfs:label>quotaUsed</rdfs:label>
    <rdfs:comment>Quota used in square kilometers.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Current processing status of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__ingestionErrors">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>ingestionErrors</rdfs:label>
    <rdfs:comment>Error message in case ingestion of the Zarr or any of its arrays failed.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__userAction">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>userAction</rdfs:label>
    <rdfs:comment>Last user action on the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_archive_status__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/archive/status</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__tileHeightPx">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>tileHeightPx</rdfs:label>
    <rdfs:comment>Tile height in pixels</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays_arrayName__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays/{arrayName}</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__error">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>error</rdfs:label>
    <rdfs:comment>Error description for requests that were submitted but failed during analysis or processing</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest.input.bounds.properties__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest.input.bounds.properties</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
    <rdfs:comment>The coordinate reference system of the coordinates. Must be
one of the values listed at https://docs.sentinel-hub.com/api/latest/api/process/crs/.
Default CRS is WGS84, http://www.opengis.net/def/crs/OGC/1.3/CRS84.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__costPU">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>costPU</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data__requestId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>requestId</rdfs:label>
    <rdfs:comment>ID of the request the tile belongs to</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output__overwrite">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output</api:usedInEndpoint>
    <rdfs:label>overwrite</rdfs:label>
    <rdfs:comment>If `true`, the request will **never** fail if files already exist. Instead, any existing files will be overwritten, except if `skipExisting` is `true` and **all** outputs for a tile exist.

*Note:* checking for existing files can only be done if the task is estimated to output fewer than 5000 files, e.g. a task that produces 5 outputs per tile and is estimated to span over 1000 grid tiles is too big to check. Such big tasks must either: &lt;ul&gt;
  &lt;li&gt; ensure that the output path is unique to the task by including `&lt;taskId&gt;` in `defaultTilePath` and all `tilePath`s,&lt;/li&gt;
  &lt;li&gt; ensure that the output path is unique by using a simple, non-templated `defaultTilePath`, or&lt;/li&gt;
  &lt;li&gt; suppress overwrite checks by setting `overwrite` to `true` and `skipExisting` to `false`.&lt;/li&gt;
&lt;ul&gt;
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_archive_create__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/archive/create</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.data.properties__tileWidth">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.data.properties</api:usedInEndpoint>
    <rdfs:label>tileWidth</rdfs:label>
    <rdfs:comment>Width of each output tile, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest.input.bounds__bbox">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>bbox</rdfs:label>
    <rdfs:comment>The request bounding box. This and/or GEOMETRY must be specified.
Specify with a coordinate pair on two (opposite) vertices of the bounding
box rectangle. Coordinates need to be in easting,northing or longitude, latitude,
in that order in the CRS defined in the "bounds.properties.crs" parameter.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId__geometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>geometry</rdfs:label>
    <rdfs:comment>Geometry of the grid tile that this request tile corresponds to.

Note that this may differ from the geometry of the tile's ouput raster
due to *bufferX/bufferY* parameters of your request
and due to reprojection from the tile's coordinate reference system to WGS84.
The exact output raster geometry can be calculated from the tile's origin, width, height,
and your request parameters *resolution*, *bufferX* and *bufferY*.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.zarrOutput__arrayParameters">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.zarrOutput</api:usedInEndpoint>
    <rdfs:label>arrayParameters</rdfs:label>
    <rdfs:comment>Parameters that will be used for all output arrays, except where overriden with `arrayOverrides`. Required unless `arrayOverrides` includes all required fields for all output arrays. All fields are standard Zarr fields. Further information can be found on the link below.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_tiles__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/tiles</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId.location__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Sentinel Hub deployment location identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId.location__url">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>url</rdfs:label>
    <rdfs:comment>Endpoint url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_archive_status__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/archive/status</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__userAction">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>userAction</rdfs:label>
    <rdfs:comment>Last user action on the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId.origin__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}.origin</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__envelope">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>envelope</rdfs:label>
    <rdfs:comment>The area of coverage of the ingested Zarr collection, defined in its native CRS.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data__cost">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>cost</rdfs:label>
    <rdfs:comment>Tile processing cost (PU)</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request__description">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request</api:usedInEndpoint>
    <rdfs:label>description</rdfs:label>
    <rdfs:comment>Optional description that can be used to keep track of requests</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data__tileGeometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data</api:usedInEndpoint>
    <rdfs:label>tileGeometry</rdfs:label>
    <rdfs:comment>The tile bounding box in the CRS of the tile.
It's automatically set to the union of all file bounding boxes.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data__noData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data</api:usedInEndpoint>
    <rdfs:label>noData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId.location__url">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>url</rdfs:label>
    <rdfs:comment>Endpoint url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__stoppedStatusReason">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>stoppedStatusReason</rdfs:label>
    <rdfs:comment>Description of why job status is STOPPED</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output.cogParameters__usePredictor">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>usePredictor</rdfs:label>
    <rdfs:comment>Whether predictor should be used for TIFF compression. If true, the predictor "2" will be passed to [GDAL GTiff raster driver](https://gdal.org/drivers/raster/gtiff.html) in case of integer output and "3" for FLOAT32 output. If false, the value "1" (no predictor) will be used.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest.input.bounds__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId.geometry__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}.geometry</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId__datasetType">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}</api:usedInEndpoint>
    <rdfs:label>datasetType</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_archive_create__requested">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/archive/create</api:usedInEndpoint>
    <rdfs:label>requested</rdfs:label>
    <rdfs:comment>Time of archiving request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest.input__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest.input</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output__cogParameters">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output</api:usedInEndpoint>
    <rdfs:label>cogParameters</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_confirm__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/confirm</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
    <rdfs:comment>Specification of the ordered data</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId.origin.crs__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}.origin.crs</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch_requestId_status__completionPercentage">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch/{requestId}/status</api:usedInEndpoint>
    <rdfs:label>completionPercentage</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__tileCount">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>tileCount</rdfs:label>
    <rdfs:comment>Number of output tiles</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId__sqkm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}</api:usedInEndpoint>
    <rdfs:label>sqkm</rdfs:label>
    <rdfs:comment>Total size of the order in km&lt;sup&gt;2&lt;/sup&gt; or minimum order area, whichever is greater</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
    <rdfs:comment>Native CRS of the Zarr. See also [Sentinel Hub CRS support](https://docs.sentinel-hub.com/api/latest/api/process/crs/).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.zarrOutput__path">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.zarrOutput</api:usedInEndpoint>
    <rdfs:label>path</rdfs:label>
    <rdfs:comment>Path or path template specifying where batch processing results shall be stored. Supported formats: &lt;ul&gt;
  &lt;li&gt;a valid Amazon S3 URL, e.g. `s3://some-bucket/some/folder`.&lt;br/&gt;
    The output Zarr will be stored to this folder (prefix).
    The request will fail if any files already exist in the folder.
  &lt;/li&gt;
  &lt;li&gt;a templated Amazon S3 URL, e.g. `s3://some-bucket/some/folder/&lt;requestId&gt;`.
    The placeholder `&lt;requestId&gt;` will be replaced by the ID of your batch request
    and the output Zarr will be stored there.
  &lt;/li&gt;
&lt;/ul&gt; The specified path &lt;b&gt;must&lt;/b&gt; not contain any subfolders or Zarr files such as &lt;code&gt;.zattrs&lt;/code&gt;, &lt;code&gt;.zgroup&lt;/code&gt;, &lt;code&gt;.zmetadata&lt;/code&gt;.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest.input.bounds__geometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>geometry</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest.input.bounds__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_tiles_tileId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Tile ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch_requestId_status__stoppedStatusReason">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch/{requestId}/status</api:usedInEndpoint>
    <rdfs:label>stoppedStatusReason</rdfs:label>
    <rdfs:comment>The reason for request having status STOPPED.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
    <rdfs:comment>Statistics for intervals, where data is available.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__userActionUpdated">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>userActionUpdated</rdfs:label>
    <rdfs:comment>Time of last user action update in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId__bands">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}</api:usedInEndpoint>
    <rdfs:label>bands</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_accountquotas__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/accountquotas</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId.location__wmsUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>wmsUrl</rdfs:label>
    <rdfs:comment>WMS Service url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__s3Bucket">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>s3Bucket</rdfs:label>
    <rdfs:comment>The S3 bucket where the Zarr is stored.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>The date and time when the collection was created.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.data__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.data</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>BYOC collection ID. If given at order creation, requested data is imported into referenced collection, which must be compatible with the data being ordered - that is, must either be empty or contain the same bands as the data being ordered.

If not given at order creation, a new BYOC collection is created when the order is confirmed and its ID is returned in the response from the `confirm` endpoint.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data.batchData__tilingGridId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data.batchData</api:usedInEndpoint>
    <rdfs:label>tilingGridId</rdfs:label>
    <rdfs:comment>ID of the tiling grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data.envelope__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data.envelope</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest.output__responses">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest.output</api:usedInEndpoint>
    <rdfs:label>responses</rdfs:label>
    <rdfs:comment>Response object.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_confirm__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/confirm</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Order ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_accountquotas_collectionId__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/accountquotas/{collectionId}</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output.cogParameters__blockxsize">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>blockxsize</rdfs:label>
    <rdfs:comment>Corresponds to the *BLOCKXSIZE* parameter of [GDAL GTiff raster driver](https://gdal.org/drivers/raster/gtiff.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__height">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>height</rdfs:label>
    <rdfs:comment>Height of the ingested Zarr collection in pixels.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output.cogParameters__overviewLevels">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>overviewLevels</rdfs:label>
    <rdfs:comment>Corresponds to the *levels* parameter of [gdaladdo](https://gdal.org/programs/gdaladdo.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__path">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>path</rdfs:label>
    <rdfs:comment>The prefix within the bucket where the Zarr is stored. Must end with '/' but not start with it and must contain a Zarr group.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data__additionalData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>additionalData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__domainAccountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>domainAccountId</rdfs:label>
    <rdfs:comment>Account that submitted the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.zarrOutput__path">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.zarrOutput</api:usedInEndpoint>
    <rdfs:label>path</rdfs:label>
    <rdfs:comment>Path or path template specifying where batch processing results shall be stored. Supported formats: &lt;ul&gt;
  &lt;li&gt;a valid Amazon S3 URL, e.g. `s3://some-bucket/some/folder`.&lt;br/&gt;
    The output Zarr will be stored to this folder (prefix).
    The request will fail if any files already exist in the folder.
  &lt;/li&gt;
  &lt;li&gt;a templated Amazon S3 URL, e.g. `s3://some-bucket/some/folder/&lt;requestId&gt;`.
    The placeholder `&lt;requestId&gt;` will be replaced by the ID of your batch request
    and the output Zarr will be stored there.
  &lt;/li&gt;
&lt;/ul&gt; The specified path &lt;b&gt;must&lt;/b&gt; not contain any subfolders or Zarr files such as &lt;code&gt;.zattrs&lt;/code&gt;, &lt;code&gt;.zgroup&lt;/code&gt;, &lt;code&gt;.zmetadata&lt;/code&gt;.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data__additionalData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data</api:usedInEndpoint>
    <rdfs:label>additionalData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>Creation time of the request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId.location___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders__sqkm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders</api:usedInEndpoint>
    <rdfs:label>sqkm</rdfs:label>
    <rdfs:comment>Total size of the order in km&lt;sup&gt;2&lt;/sup&gt; or minimum order area, whichever is greater</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__zarrOutput">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>zarrOutput</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request__processRequest">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request</api:usedInEndpoint>
    <rdfs:label>processRequest</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId__sqkm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}</api:usedInEndpoint>
    <rdfs:label>sqkm</rdfs:label>
    <rdfs:comment>Area of the subscriptions's `input.bounds` in km&lt;sup&gt;2&lt;/sup&gt;</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data.additionalData__extent">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>extent</rdfs:label>
    <rdfs:comment>The collection extent in WGS84.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__bucketName">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>bucketName</rdfs:label>
    <rdfs:comment>Simplified alternative for specifying where the results shall be written, where only the bucket name is specified. Specifying `some-bucket` as `bucketName` is equivalent to specifying `s3://some-bucket` as the `defaultTilePath` in `output`.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
    <rdfs:comment>Specification of the ordered data</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.batchData__tilingGridId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.batchData</api:usedInEndpoint>
    <rdfs:label>tilingGridId</rdfs:label>
    <rdfs:comment>ID of the tiling grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_archive_create__size">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/archive/create</api:usedInEndpoint>
    <rdfs:label>size</rdfs:label>
    <rdfs:comment>Size of archive in bytes. Only provided for archives with status `DONE`.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_archive_status__format">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/archive/status</api:usedInEndpoint>
    <rdfs:label>format</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_accountquotas_collectionId__quotaSqkm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/accountquotas/{collectionId}</api:usedInEndpoint>
    <rdfs:label>quotaSqkm</rdfs:label>
    <rdfs:comment>This is total purchased quota. Available quota is quotaSqkm - quotaUsed.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>BYOC collection ID. If given at subscription creation, the data is imported into referenced collection, which must be compatible with the data being subscribed - that is, must either be empty or contain the same bands as the data being subscribed.

If not given at subscription creation, a new BYOC collection is created when the subscription is confirmed and its ID is returned in the response from the `confirm` endpoint.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId__bands">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}</api:usedInEndpoint>
    <rdfs:label>bands</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__domainAccountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>domainAccountId</rdfs:label>
    <rdfs:comment>Account that submitted the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.tilingGrid__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.tilingGrid</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Id of one of the supported tiling grids</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__error">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>error</rdfs:label>
    <rdfs:comment>Error description for requests that were submitted but failed during analysis or processing</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest.input.bounds__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__userAction">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>userAction</rdfs:label>
    <rdfs:comment>Last user action on the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>Creation time of the request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.zarrOutput__arrayOverrides">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.zarrOutput</api:usedInEndpoint>
    <rdfs:label>arrayOverrides</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.additionalData__maxMetersPerPixel">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.additionalData</api:usedInEndpoint>
    <rdfs:label>maxMetersPerPixel</rdfs:label>
    <rdfs:comment>How much meters per pixel can you request with Process/OGC/Batch requests for this collection. The limit is internally increased to 500, if it's less than that.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId.additionalData__storageIdentifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}.additionalData</api:usedInEndpoint>
    <rdfs:label>storageIdentifier</rdfs:label>
    <rdfs:comment>The identifier of the storage where the bucket resides.

For the default storage, you don't have to set this. The possible values are deployment-specific.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest__evalscript">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest</api:usedInEndpoint>
    <rdfs:label>evalscript</rdfs:label>
    <rdfs:comment>Your evalscript. For details, click
&lt;a href="https://docs.sentinel-hub.com/api/latest/evalscript/v3/" target="_blank"&gt;here&lt;/a&gt;.
&lt;br/&gt;Evalscript is not required here if using multipart upload.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data.additionalData__failedIngestionCause">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data.additionalData</api:usedInEndpoint>
    <rdfs:label>failedIngestionCause</rdfs:label>
    <rdfs:comment>Contains additional information about why ingestion failed (if applicable).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__error">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>error</rdfs:label>
    <rdfs:comment>Error description for requests that were submitted but failed during analysis or processing</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__userActionUpdated">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>userActionUpdated</rdfs:label>
    <rdfs:comment>Time of last user action update in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Order ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.additionalData.extent__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.additionalData.extent</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data.additionalData.extent__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data.additionalData.extent</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId.bands__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}.bands</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Band identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__stoppedStatusReason">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>stoppedStatusReason</rdfs:label>
    <rdfs:comment>Description of why job status is STOPPED</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest.output__responses">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest.output</api:usedInEndpoint>
    <rdfs:label>responses</rdfs:label>
    <rdfs:comment>Response object.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_archive_status__deliveryId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/archive/status</api:usedInEndpoint>
    <rdfs:label>deliveryId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId.batchData__tilingGridId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}.batchData</api:usedInEndpoint>
    <rdfs:label>tilingGridId</rdfs:label>
    <rdfs:comment>ID of the tiling grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest.output.responses__format">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>format</rdfs:label>
    <rdfs:comment>Format object
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data.geometry__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data.geometry</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics.data__interval">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics.data</api:usedInEndpoint>
    <rdfs:label>interval</rdfs:label>
    <rdfs:comment>Interval on which, there's actual data
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_cancel__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/cancel</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__ingestionErrors">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>ingestionErrors</rdfs:label>
    <rdfs:comment>Error message in case ingestion of the Zarr or any of its arrays failed.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.additionalData__toSensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.additionalData</api:usedInEndpoint>
    <rdfs:label>toSensingTime</rdfs:label>
    <rdfs:comment>The sensing time in ISO 8601 of the most recent tile.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids_id.properties__resolutions">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids/{id}.properties</api:usedInEndpoint>
    <rdfs:label>resolutions</rdfs:label>
    <rdfs:comment>List of supported resolutions, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_cancel__sqkm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/cancel</api:usedInEndpoint>
    <rdfs:label>sqkm</rdfs:label>
    <rdfs:comment>Area of the subscriptions's `input.bounds` in km&lt;sup&gt;2&lt;/sup&gt;</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId.bands__sampleType">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}.bands</api:usedInEndpoint>
    <rdfs:label>sampleType</rdfs:label>
    <rdfs:comment>Band sample type</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__tilingGridId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>tilingGridId</rdfs:label>
    <rdfs:comment>This parameter was moved to tilingGrid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest__evalscript">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest</api:usedInEndpoint>
    <rdfs:label>evalscript</rdfs:label>
    <rdfs:comment>Your evalscript. For details, click
&lt;a href="https://docs.sentinel-hub.com/api/latest/evalscript/v3/" target="_blank"&gt;here&lt;/a&gt;.
&lt;br/&gt;Evalscript is not required here if using multipart upload.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch_requestId_status__lastUpdated">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch/{requestId}/status</api:usedInEndpoint>
    <rdfs:label>lastUpdated</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_archive_status__format">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/archive/status</api:usedInEndpoint>
    <rdfs:label>format</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__description">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>description</rdfs:label>
    <rdfs:comment>Optional description that can be used to keep track of requests</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data.additionalData__warnings">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data.additionalData</api:usedInEndpoint>
    <rdfs:label>warnings</rdfs:label>
    <rdfs:comment>Contains additional information about potential tile problems.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_async_process_requestId__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/async/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Status of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__valueEstimate">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>valueEstimate</rdfs:label>
    <rdfs:comment>Estimated processing value (cost) of the request in [processing units](https://docs.sentinel-hub.com/api/latest/api/overview/processing-unit/). The accuracy of the estimate depends on your request, as described in the [documentation](https://docs.sentinel-hub.com/api/latest/api/batch/#cost-estimate).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output__overwrite">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output</api:usedInEndpoint>
    <rdfs:label>overwrite</rdfs:label>
    <rdfs:comment>If `true`, the request will **never** fail if files already exist. Instead, any existing files will be overwritten, except if `skipExisting` is `true` and **all** outputs for a tile exist.

*Note:* checking for existing files can only be done if the task is estimated to output fewer than 5000 files, e.g. a task that produces 5 outputs per tile and is estimated to span over 1000 grid tiles is too big to check. Such big tasks must either: &lt;ul&gt;
  &lt;li&gt; ensure that the output path is unique to the task by including `&lt;taskId&gt;` in `defaultTilePath` and all `tilePath`s,&lt;/li&gt;
  &lt;li&gt; ensure that the output path is unique by using a simple, non-templated `defaultTilePath`, or&lt;/li&gt;
  &lt;li&gt; suppress overwrite checks by setting `overwrite` to `true` and `skipExisting` to `false`.&lt;/li&gt;
&lt;ul&gt;
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Only INGESTED collections can be used in Process API.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId.location__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Sentinel Hub deployment location identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest.input__bounds">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest.input</api:usedInEndpoint>
    <rdfs:label>bounds</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Order name. It's also used as a name for a new BYOC collection, if no collection is given in collectionId field.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.tilingGrid__bufferX">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.tilingGrid</api:usedInEndpoint>
    <rdfs:label>bufferX</rdfs:label>
    <rdfs:comment>Will expand each output tile horizontally (on the left and the right) by number of pixels specified by this value. &lt;br&gt;&lt;br&gt; &lt;b&gt;Example:&lt;/b&gt; &lt;br&gt; If bufferX is 5, the output tile will be wider by 10 pixels. Coordinates of the tile are also moved accordingly by the number of pixels multiplied by resolution in each direction. However, the `tileWidthX` property returned by the API will **not** include the buffer.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.zarrOutput__arrayParameters">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.zarrOutput</api:usedInEndpoint>
    <rdfs:label>arrayParameters</rdfs:label>
    <rdfs:comment>Parameters that will be used for all output arrays, except where overriden with `arrayOverrides`. Required unless `arrayOverrides` includes all required fields for all output arrays. All fields are standard Zarr fields. Further information can be found on the link below.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Unique identifier of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data.additionalData__storageIdentifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>storageIdentifier</rdfs:label>
    <rdfs:comment>The identifier of the storage where the bucket resides.

For the default storage, you don't have to set this. The possible values are deployment-specific.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data.additionalData__bands">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>bands</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>If provided, the results will be written as COG (cloud optimized GeoTIFFs) and added to the existing collection with the specified identifier. All outputs must be single-band and use the TIFF format. The collection must exist and be compatible -- that is, must contain bands equivalent to the batch request's outputs with the same bit depths. Only one of *createCollection* and *collectinId* may be specified. Requires `"cogOutput"=true`.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId.additionalData__maxMetersPerPixel">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}.additionalData</api:usedInEndpoint>
    <rdfs:label>maxMetersPerPixel</rdfs:label>
    <rdfs:comment>How much meters per pixel can you request with Process/OGC/Batch requests for this collection. The limit is internally increased to 500, if it's less than that.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.zarrOutput__group">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.zarrOutput</api:usedInEndpoint>
    <rdfs:label>group</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data__coverGeometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data</api:usedInEndpoint>
    <rdfs:label>coverGeometry</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__valueEstimate">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>valueEstimate</rdfs:label>
    <rdfs:comment>Estimated processing value (cost) of the request in [processing units](https://docs.sentinel-hub.com/api/latest/api/overview/processing-unit/). The accuracy of the estimate depends on your request, as described in the [documentation](https://docs.sentinel-hub.com/api/latest/api/batch/#cost-estimate).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__tileHeightPx">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>tileHeightPx</rdfs:label>
    <rdfs:comment>Tile height in pixels</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_confirm__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/confirm</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Subscription name. It's also used as a name for a new BYOC collection, if no collection is given in collectionId field.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data__noData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>noData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__description">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>description</rdfs:label>
    <rdfs:comment>Optional description that can be used to keep track of requests</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest.output.responses__format">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>format</rdfs:label>
    <rdfs:comment>Format object
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__valueEstimate">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>valueEstimate</rdfs:label>
    <rdfs:comment>Estimated processing value (cost) of the request in [processing units](https://docs.sentinel-hub.com/api/latest/api/overview/processing-unit/). The accuracy of the estimate depends on your request, as described in the [documentation](https://docs.sentinel-hub.com/api/latest/api/batch/#cost-estimate).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Subscription name. It's also used as a name for a new BYOC collection, if no collection is given in collectionId field.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data.additionalData__storageIdentifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>storageIdentifier</rdfs:label>
    <rdfs:comment>The identifier of the storage where the bucket resides.

For the default storage, you don't have to set this. The possible values are deployment-specific.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__path">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>path</rdfs:label>
    <rdfs:comment>The prefix within the bucket where the Zarr is stored. Must end with '/' but not start with it and must contain a Zarr group.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest.input.bounds.properties__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest.input.bounds.properties</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
    <rdfs:comment>The coordinate reference system of the coordinates. Must be
one of the values listed at https://docs.sentinel-hub.com/api/latest/api/process/crs/.
Default CRS is WGS84, http://www.opengis.net/def/crs/OGC/1.3/CRS84.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data.additionalData__toSensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data.additionalData</api:usedInEndpoint>
    <rdfs:label>toSensingTime</rdfs:label>
    <rdfs:comment>The sensing time in ISO 8601 of the most recent tile.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.additionalData__extent">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.additionalData</api:usedInEndpoint>
    <rdfs:label>extent</rdfs:label>
    <rdfs:comment>The collection extent in WGS84.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.data.properties__resolutions">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.data.properties</api:usedInEndpoint>
    <rdfs:label>resolutions</rdfs:label>
    <rdfs:comment>List of supported resolutions, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays_arrayName.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays/{arrayName}.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.zarrOutput__path">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.zarrOutput</api:usedInEndpoint>
    <rdfs:label>path</rdfs:label>
    <rdfs:comment>Path or path template specifying where batch processing results shall be stored. Supported formats: &lt;ul&gt;
  &lt;li&gt;a valid Amazon S3 URL, e.g. `s3://some-bucket/some/folder`.&lt;br/&gt;
    The output Zarr will be stored to this folder (prefix).
    The request will fail if any files already exist in the folder.
  &lt;/li&gt;
  &lt;li&gt;a templated Amazon S3 URL, e.g. `s3://some-bucket/some/folder/&lt;requestId&gt;`.
    The placeholder `&lt;requestId&gt;` will be replaced by the ID of your batch request
    and the output Zarr will be stored there.
  &lt;/li&gt;
&lt;/ul&gt; The specified path &lt;b&gt;must&lt;/b&gt; not contain any subfolders or Zarr files such as &lt;code&gt;.zattrs&lt;/code&gt;, &lt;code&gt;.zgroup&lt;/code&gt;, &lt;code&gt;.zmetadata&lt;/code&gt;.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId.origin__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}.origin</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data.envelope__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data.envelope</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__width">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>width</rdfs:label>
    <rdfs:comment>Width of the ingested Zarr collection in pixels.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.data__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.data</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>BYOC collection ID. If given at subscription creation, the data is imported into referenced collection, which must be compatible with the data being subscribed - that is, must either be empty or contain the same bands as the data being subscribed.

If not given at subscription creation, a new BYOC collection is created when the subscription is confirmed and its ID is returned in the response from the `confirm` endpoint.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_archive_create__requested">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/archive/create</api:usedInEndpoint>
    <rdfs:label>requested</rdfs:label>
    <rdfs:comment>Time of archiving request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_tiles_tileId__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data.additionalData__failedIngestionCause">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data.additionalData</api:usedInEndpoint>
    <rdfs:label>failedIngestionCause</rdfs:label>
    <rdfs:comment>Contains additional information about why ingestion failed (if applicable).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>BYOC collection ID. If given at order creation, requested data is imported into referenced collection, which must be compatible with the data being ordered - that is, must either be empty or contain the same bands as the data being ordered.

If not given at order creation, a new BYOC collection is created when the order is confirmed and its ID is returned in the response from the `confirm` endpoint.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest.input.bounds__bbox">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>bbox</rdfs:label>
    <rdfs:comment>The request bounding box. This and/or GEOMETRY must be specified.
Specify with a coordinate pair on two (opposite) vertices of the bounding
box rectangle. Coordinates need to be in easting,northing or longitude, latitude,
in that order in the CRS defined in the "bounds.properties.crs" parameter.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.tilingGrid__bufferY">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.tilingGrid</api:usedInEndpoint>
    <rdfs:label>bufferY</rdfs:label>
    <rdfs:comment>Will expand each output tile vertically (on the top and the bottom) by number of pixels specified by this value. See `bufferX` above for an example.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Subscription ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_confirm__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/confirm</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.zarrOutput__arrayOverrides">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.zarrOutput</api:usedInEndpoint>
    <rdfs:label>arrayOverrides</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids_id.properties__tileWidth">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids/{id}.properties</api:usedInEndpoint>
    <rdfs:label>tileWidth</rdfs:label>
    <rdfs:comment>Width of each output tile, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest.input.bounds__bbox">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>bbox</rdfs:label>
    <rdfs:comment>The request bounding box. This and/or GEOMETRY must be specified.
Specify with a coordinate pair on two (opposite) vertices of the bounding
box rectangle. Coordinates need to be in easting,northing or longitude, latitude,
in that order in the CRS defined in the "bounds.properties.crs" parameter.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__costPU">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>costPU</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_tiles__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/tiles</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest.output.responses__identifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>identifier</rdfs:label>
    <rdfs:comment>Response's identifier is used to connect the results of an evalscript with the output file.
Each response identifier value must either match one of the values in `setup()` -&gt; `output.id` in the evalscript (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#ndvi-image--and--value-multi-part-response-png-and-geotiff" target="_blank"&gt;example&lt;/a&gt;)
or be `userdata` (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#true-color-and-metadata-multi-part-response-geotiff-and-json" target="_blank"&gt;example&lt;/a&gt;).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request__description">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request</api:usedInEndpoint>
    <rdfs:label>description</rdfs:label>
    <rdfs:comment>Optional description that can be used to keep track of requests</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.tilingGrid__bufferY">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.tilingGrid</api:usedInEndpoint>
    <rdfs:label>bufferY</rdfs:label>
    <rdfs:comment>Will expand each output tile vertically (on the top and the bottom) by number of pixels specified by this value. See `bufferX` above for an example.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.additionalData.extent__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.additionalData.extent</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request__instanceType">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request</api:usedInEndpoint>
    <rdfs:label>instanceType</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId__requestId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>requestId</rdfs:label>
    <rdfs:comment>ID of the request the tile belongs to</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__processRequest">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>processRequest</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__domainAccountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>domainAccountId</rdfs:label>
    <rdfs:comment>Account that submitted the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location__processUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location</api:usedInEndpoint>
    <rdfs:label>processUrl</rdfs:label>
    <rdfs:comment>Process API url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.additionalData__bands">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.additionalData</api:usedInEndpoint>
    <rdfs:label>bands</rdfs:label>
    <rdfs:comment>Limited to 100 bands.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Current processing status of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest.input.bounds__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_tiles.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Tile ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.data__sqkm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.data</api:usedInEndpoint>
    <rdfs:label>sqkm</rdfs:label>
    <rdfs:comment>Total size of the order in km&lt;sup&gt;2&lt;/sup&gt; or minimum order area, whichever is greater</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__additionalData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>additionalData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>The date when the collection was created. Older collections don't have it.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch_requestId_status__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch/{requestId}/status</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Current processing status of the request. Must NOT be specified when creating new requests</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch_requestId_status__error">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch/{requestId}/status</api:usedInEndpoint>
    <rdfs:label>error</rdfs:label>
    <rdfs:comment>Description of error in case the request failed.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_accountquotas.data__quotaUsed">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/accountquotas.data</api:usedInEndpoint>
    <rdfs:label>quotaUsed</rdfs:label>
    <rdfs:comment>Quota used in square kilometers.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__error">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>error</rdfs:label>
    <rdfs:comment>Error description for requests that were submitted but failed during analysis or processing</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest.input.bounds.properties__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest.input.bounds.properties</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
    <rdfs:comment>The coordinate reference system of the coordinates. Must be
one of the values listed at https://docs.sentinel-hub.com/api/latest/api/process/crs/.
Default CRS is WGS84, http://www.opengis.net/def/crs/OGC/1.3/CRS84.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest.output.responses__identifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>identifier</rdfs:label>
    <rdfs:comment>Response's identifier is used to connect the results of an evalscript with the output file.
Each response identifier value must either match one of the values in `setup()` -&gt; `output.id` in the evalscript (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#ndvi-image--and--value-multi-part-response-png-and-geotiff" target="_blank"&gt;example&lt;/a&gt;)
or be `userdata` (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#true-color-and-metadata-multi-part-response-geotiff-and-json" target="_blank"&gt;example&lt;/a&gt;).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output__skipExisting">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output</api:usedInEndpoint>
    <rdfs:label>skipExisting</rdfs:label>
    <rdfs:comment>If `true`, any tiles for which **all** outputs already exist will be skipped. Tiles for which only **some** of the outputs exist will either be *fully overwritten* (if `overwrite` is `true`) or will cause the whole request to fail.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics.data.error__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics.data.error</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.tilingGrid__bufferX">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.tilingGrid</api:usedInEndpoint>
    <rdfs:label>bufferX</rdfs:label>
    <rdfs:comment>Will expand each output tile horizontally (on the left and the right) by number of pixels specified by this value. &lt;br&gt;&lt;br&gt; &lt;b&gt;Example:&lt;/b&gt; &lt;br&gt; If bufferX is 5, the output tile will be wider by 10 pixels. Coordinates of the tile are also moved accordingly by the number of pixels multiplied by resolution in each direction. However, the `tileWidthX` property returned by the API will **not** include the buffer.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.output__defaultTilePath">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.output</api:usedInEndpoint>
    <rdfs:label>defaultTilePath</rdfs:label>
    <rdfs:comment>Path or path template specifying where batch processing results shall be stored. Supported formats: &lt;ul&gt;
  &lt;li&gt;a valid Amazon S3 URL, e.g. `s3://some-bucket/some/folder`.&lt;br/&gt;
    A subdirectory will be created for this batch request, named after the request ID, and will contain further subdirectories with the output tiles.
    This is equivalent to the template `s3://some-bucket/some/folder/&lt;requestId&gt;/&lt;tileName&gt;/&lt;outputId&gt;.&lt;format&gt;`.
  &lt;/li&gt;
  &lt;li&gt;a templated Amazon S3 URL, e.g. `s3://some-bucket/some/folder/&lt;tileName&gt;.tif`.
    Templating allows custom organization of the output files.
    Templates can contain the following placeholders, which are replaced by respective actual values when writing results:
    &lt;ul&gt;
      &lt;li&gt; `&lt;requestId&gt;` - the ID of your batch request,&lt;/li&gt;
      &lt;li&gt; `&lt;tileName&gt;` - the name (string ID) of the tile within the used tiling grid,&lt;/li&gt;
      &lt;li&gt; `&lt;tileId&gt;` - the numerical ID of the tile within the used tiling grid,&lt;/li&gt;
      &lt;li&gt; `&lt;outputId&gt;` - the output (raster) identifier (e.g. `default`),&lt;/li&gt;
      &lt;li&gt; `&lt;format&gt;` - the filename extension of the output's format (e.g. `tiff`).&lt;/li&gt;
    &lt;/ul&gt;
    The template must contain `&lt;tileName&gt;` or `&lt;tileId&gt;` in order to ensure unique output files.
    In case of multiple outputs, the template must also contain `&lt;outputId&gt;`.
  &lt;/li&gt;
&lt;/ul&gt; The request will fail if files already exist.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest.output.responses__format">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>format</rdfs:label>
    <rdfs:comment>Format object
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output.cogParameters__overviewMinSize">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>overviewMinSize</rdfs:label>
    <rdfs:comment>Corresponds to the *minsize* parameter of [gdaladdo](https://gdal.org/programs/gdaladdo.html).
Default value minimum of blockxsize and blockysize
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data.additionalData__maxMetersPerPixel">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data.additionalData</api:usedInEndpoint>
    <rdfs:label>maxMetersPerPixel</rdfs:label>
    <rdfs:comment>How many meters per pixel can you request with Process/OGC/Batch requests for this collection.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest.input__bounds">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest.input</api:usedInEndpoint>
    <rdfs:label>bounds</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections__additionalData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections</api:usedInEndpoint>
    <rdfs:label>additionalData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId.additionalData__bands">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}.additionalData</api:usedInEndpoint>
    <rdfs:label>bands</rdfs:label>
    <rdfs:comment>Limited to 100 bands.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Order name. It's also used as a name for a new BYOC collection, if no collection is given in collectionId field.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__description">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>description</rdfs:label>
    <rdfs:comment>Optional description that can be used to keep track of requests</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_confirm__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/confirm</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Subscription ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.data.properties__tileHeight">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.data.properties</api:usedInEndpoint>
    <rdfs:label>tileHeight</rdfs:label>
    <rdfs:comment>Height of each output tile, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data__origin">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>origin</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_cancel__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/cancel</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>Subscription name. It's also used as a name for a new BYOC collection, if no collection is given in collectionId field.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest.input.bounds__bbox">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>bbox</rdfs:label>
    <rdfs:comment>The request bounding box. This and/or GEOMETRY must be specified.
Specify with a coordinate pair on two (opposite) vertices of the bounding
box rectangle. Coordinates need to be in easting,northing or longitude, latitude,
in that order in the CRS defined in the "bounds.properties.crs" parameter.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data.geometry__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data.geometry</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_archive_status__requested">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/archive/status</api:usedInEndpoint>
    <rdfs:label>requested</rdfs:label>
    <rdfs:comment>Time of archiving request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest.input.bounds.properties__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest.input.bounds.properties</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
    <rdfs:comment>The coordinate reference system of the coordinates. Must be
one of the values listed at https://docs.sentinel-hub.com/api/latest/api/process/crs/.
Default CRS is WGS84, http://www.opengis.net/def/crs/OGC/1.3/CRS84.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest__evalscript">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest</api:usedInEndpoint>
    <rdfs:label>evalscript</rdfs:label>
    <rdfs:comment>Your evalscript. For details, click
&lt;a href="https://docs.sentinel-hub.com/api/latest/evalscript/v3/" target="_blank"&gt;here&lt;/a&gt;.
&lt;br/&gt;Evalscript is not required here if using multipart upload.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections__batchData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections</api:usedInEndpoint>
    <rdfs:label>batchData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__userActionUpdated">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>userActionUpdated</rdfs:label>
    <rdfs:comment>Time of last user action update in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__error">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>error</rdfs:label>
    <rdfs:comment>Error description for requests that were submitted but failed during analysis or processing</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.tilingGrid__resolution">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.tilingGrid</api:usedInEndpoint>
    <rdfs:label>resolution</rdfs:label>
    <rdfs:comment>Output resolution in units of the tiling grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids_id.properties__resolutions">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids/{id}.properties</api:usedInEndpoint>
    <rdfs:label>resolutions</rdfs:label>
    <rdfs:comment>List of supported resolutions, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId.location__url">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>url</rdfs:label>
    <rdfs:comment>Endpoint url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data.additionalData__hasSensingTimes">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>hasSensingTimes</rdfs:label>
    <rdfs:comment>Information if tiles have sensing time.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.data.properties__resolutions">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.data.properties</api:usedInEndpoint>
    <rdfs:label>resolutions</rdfs:label>
    <rdfs:comment>List of supported resolutions, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data.origin__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data.origin</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest.input__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest.input</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output.cogParameters__overviewMinSize">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>overviewMinSize</rdfs:label>
    <rdfs:comment>Corresponds to the *minsize* parameter of [gdaladdo](https://gdal.org/programs/gdaladdo.html).
Default value minimum of blockxsize and blockysize
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.zarrOutput__arrayParameters">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.zarrOutput</api:usedInEndpoint>
    <rdfs:label>arrayParameters</rdfs:label>
    <rdfs:comment>Parameters that will be used for all output arrays, except where overriden with `arrayOverrides`. Required unless `arrayOverrides` includes all required fields for all output arrays. All fields are standard Zarr fields. Further information can be found on the link below.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__bucketName">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>bucketName</rdfs:label>
    <rdfs:comment>Simplified alternative for specifying where the results shall be written, where only the bucket name is specified. Specifying `some-bucket` as `bucketName` is equivalent to specifying `s3://some-bucket` as the `defaultTilePath` in `output`.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>The date and time when the collection was created.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__bucketName">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>bucketName</rdfs:label>
    <rdfs:comment>Simplified alternative for specifying where the results shall be written, where only the bucket name is specified. Specifying `some-bucket` as `bucketName` is equivalent to specifying `s3://some-bucket` as the `defaultTilePath` in `output`.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output.cogParameters__blockxsize">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>blockxsize</rdfs:label>
    <rdfs:comment>Corresponds to the *BLOCKXSIZE* parameter of [GDAL GTiff raster driver](https://gdal.org/drivers/raster/gtiff.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data__geometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>geometry</rdfs:label>
    <rdfs:comment>Geometry of the grid tile that this request tile corresponds to.

Note that this may differ from the geometry of the tile's ouput raster
due to *bufferX/bufferY* parameters of your request
and due to reprojection from the tile's coordinate reference system to WGS84.
The exact output raster geometry can be calculated from the tile's origin, width, height,
and your request parameters *resolution*, *bufferX* and *bufferY*.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__tilingGrid">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>tilingGrid</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
    <rdfs:comment>Current processing status of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId__datasetType">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}</api:usedInEndpoint>
    <rdfs:label>datasetType</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__tilingGrid">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>tilingGrid</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays_arrayName.data__path">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays/{arrayName}.data</api:usedInEndpoint>
    <rdfs:label>path</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__height">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>height</rdfs:label>
    <rdfs:comment>Height of the ingested Zarr collection in pixels.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>The date when the collection was created.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest.output.responses__identifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>identifier</rdfs:label>
    <rdfs:comment>Response's identifier is used to connect the results of an evalscript with the output file.
Each response identifier value must either match one of the values in `setup()` -&gt; `output.id` in the evalscript (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#ndvi-image--and--value-multi-part-response-png-and-geotiff" target="_blank"&gt;example&lt;/a&gt;)
or be `userdata` (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#true-color-and-metadata-multi-part-response-geotiff-and-json" target="_blank"&gt;example&lt;/a&gt;).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Batch Collection identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest.input.bounds__geometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>geometry</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output__cogParameters">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output</api:usedInEndpoint>
    <rdfs:label>cogParameters</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest.output.responses__identifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest.output.responses</api:usedInEndpoint>
    <rdfs:label>identifier</rdfs:label>
    <rdfs:comment>Response's identifier is used to connect the results of an evalscript with the output file.
Each response identifier value must either match one of the values in `setup()` -&gt; `output.id` in the evalscript (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#ndvi-image--and--value-multi-part-response-png-and-geotiff" target="_blank"&gt;example&lt;/a&gt;)
or be `userdata` (see &lt;a href="https://docs.sentinel-hub.com/api/latest/data/sentinel-2-l1c/examples/#true-color-and-metadata-multi-part-response-geotiff-and-json" target="_blank"&gt;example&lt;/a&gt;).
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId.bands__sampleType">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}.bands</api:usedInEndpoint>
    <rdfs:label>sampleType</rdfs:label>
    <rdfs:comment>Band sample type</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids_id.properties__unit">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids/{id}.properties</api:usedInEndpoint>
    <rdfs:label>unit</rdfs:label>
    <rdfs:comment>Units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_reingest.data__envelope">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/reingest.data</api:usedInEndpoint>
    <rdfs:label>envelope</rdfs:label>
    <rdfs:comment>The area of coverage of the ingested Zarr collection, defined in its native CRS.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_async_process_requestId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/async/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>UUID of the submitted request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_archive_create__deliveryId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/archive/create</api:usedInEndpoint>
    <rdfs:label>deliveryId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Subscription ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__resolution">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>resolution</rdfs:label>
    <rdfs:comment>This parameter was moved to tilingGrid.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output__cogOutput">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output</api:usedInEndpoint>
    <rdfs:label>cogOutput</rdfs:label>
    <rdfs:comment>If `true`, the results will be written as COG (cloud optimized GeoTIFFs). All outputs must use the TIFF format and **cannot** use `sampleType` INT8. We also suggest setting the evalscript output object `nodataValue` (&lt;a href="https://docs.sentinel-hub.com/api/latest/evalscript/v3/#output-object-properties" target="_blank"&gt;more details&lt;/a&gt;) for correct overview generation.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId.additionalData__toSensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}.additionalData</api:usedInEndpoint>
    <rdfs:label>toSensingTime</rdfs:label>
    <rdfs:comment>The sensing time in ISO 8601 of the most recent tile.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data__zarrOutput">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data</api:usedInEndpoint>
    <rdfs:label>zarrOutput</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.data__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.data</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
    <rdfs:comment>Specification of the ordered data</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.data.properties__tileHeight">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.data.properties</api:usedInEndpoint>
    <rdfs:label>tileHeight</rdfs:label>
    <rdfs:comment>Height of each output tile, in units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__lastUpdated">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>lastUpdated</rdfs:label>
    <rdfs:comment>Last updated time of the request in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output.cogParameters__blockysize">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output.cogParameters</api:usedInEndpoint>
    <rdfs:label>blockysize</rdfs:label>
    <rdfs:comment>Corresponds to the *BLOCKYSIZE* parameter of [GDAL GTiff raster driver](https://gdal.org/drivers/raster/gtiff.html).</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__userAction">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>userAction</rdfs:label>
    <rdfs:comment>Last user action on the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_accountquotas.data__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/accountquotas.data</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids_id.properties__unit">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids/{id}.properties</api:usedInEndpoint>
    <rdfs:label>unit</rdfs:label>
    <rdfs:comment>Units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_archive_create__deliveryId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/archive/create</api:usedInEndpoint>
    <rdfs:label>deliveryId</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays.data__zarray">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays.data</api:usedInEndpoint>
    <rdfs:label>zarray</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__width">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>width</rdfs:label>
    <rdfs:comment>Width of the ingested Zarr collection in pixels.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data.origin__crs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data.origin</api:usedInEndpoint>
    <rdfs:label>crs</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data__requiresMetadataUpdate">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>requiresMetadataUpdate</rdfs:label>
    <rdfs:comment>Flag if the metadata, found under additionalData, needs to be updated after a tile is added or removed.
Metadata is updated in a few minutes.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data.origin__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data.origin</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__tileWidthPx">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>tileWidthPx</rdfs:label>
    <rdfs:comment>Tile width in pixels</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest.input.bounds__geometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>geometry</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data.additionalData__maxMetersPerPixel">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>maxMetersPerPixel</rdfs:label>
    <rdfs:comment>How much meters per pixel can you request with Process/OGC/Batch requests for this collection. The limit is internally increased to 500, if it's less than that.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest.input__bounds">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest.input</api:usedInEndpoint>
    <rdfs:label>bounds</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Sentinel Hub deployment location identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.additionalData__storageIdentifier">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.additionalData</api:usedInEndpoint>
    <rdfs:label>storageIdentifier</rdfs:label>
    <rdfs:comment>The identifier of the storage where the bucket resides.

For the default storage, you don't have to set this. The possible values are deployment-specific.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId.location__wmsUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>wmsUrl</rdfs:label>
    <rdfs:comment>WMS Service url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data.additionalData__maxMetersPerPixel">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data.additionalData</api:usedInEndpoint>
    <rdfs:label>maxMetersPerPixel</rdfs:label>
    <rdfs:comment>How much meters per pixel can you request with Process/OGC/Batch requests for this collection. The limit is internally increased to 500, if it's less than that.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output__createCollection">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output</api:usedInEndpoint>
    <rdfs:label>createCollection</rdfs:label>
    <rdfs:comment>If `true`, the results will be written as COG (cloud optimized GeoTIFFs) and a collection will be automatically created. All outputs must be single-band and use the TIFF format. Only one of *createCollection* and *collectinId* may be specified. Requires `"cogOutput"=true`.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries_deliveryId_tiles_tileId__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries/{deliveryId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data.tileGeometry__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data.tileGeometry</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_confirm__sqkm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/confirm</api:usedInEndpoint>
    <rdfs:label>sqkm</rdfs:label>
    <rdfs:comment>Total size of the order in km&lt;sup&gt;2&lt;/sup&gt; or minimum order area, whichever is greater</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.data__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.data</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections_collectionId.additionalData__fromSensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections/{collectionId}.additionalData</api:usedInEndpoint>
    <rdfs:label>fromSensingTime</rdfs:label>
    <rdfs:comment>The sensing time in ISO 8601 of the least recent tile.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>The date when the collection was created. Older collections don't have it.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data__sensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>sensingTime</rdfs:label>
    <rdfs:comment>The sensing time of the tile in ISO 8601 but without sub-millisecond precision.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__tilingGridId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>tilingGridId</rdfs:label>
    <rdfs:comment>This parameter was moved to tilingGrid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.data.properties__unit">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.data.properties</api:usedInEndpoint>
    <rdfs:label>unit</rdfs:label>
    <rdfs:comment>Units used by the grid</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.processRequest.input.bounds__geometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>geometry</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.tilingGrid__bufferY">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.tilingGrid</api:usedInEndpoint>
    <rdfs:label>bufferY</rdfs:label>
    <rdfs:comment>Will expand each output tile vertically (on the top and the bottom) by number of pixels specified by this value. See `bufferX` above for an example.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId.location__catalogUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>catalogUrl</rdfs:label>
    <rdfs:comment>Catalog API url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data__s3Bucket">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>s3Bucket</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data__batchData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data</api:usedInEndpoint>
    <rdfs:label>batchData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId__origin">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>origin</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.zarrOutput__arrayOverrides">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.zarrOutput</api:usedInEndpoint>
    <rdfs:label>arrayOverrides</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__tileWidthPx">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>tileWidthPx</rdfs:label>
    <rdfs:comment>Tile width in pixels</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest.input.bounds__geometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>geometry</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.output__skipExisting">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.output</api:usedInEndpoint>
    <rdfs:label>skipExisting</rdfs:label>
    <rdfs:comment>If `true`, any tiles for which **all** outputs already exist will be skipped. Tiles for which only **some** of the outputs exist will either be *fully overwritten* (if `overwrite` is `true`) or will cause the whole request to fail.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__resolution">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>resolution</rdfs:label>
    <rdfs:comment>This parameter was moved to tilingGrid.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.request.processRequest.input__bounds">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.request.processRequest.input</api:usedInEndpoint>
    <rdfs:label>bounds</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_cancel__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/cancel</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch_requestId_status__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch/{requestId}/status</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>UUID of the submitted request.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId__location">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}</api:usedInEndpoint>
    <rdfs:label>location</rdfs:label>
    <rdfs:comment>BYOC Collection location</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__accountId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>accountId</rdfs:label>
    <rdfs:comment>Account that submitted the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays.data__zattrs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays.data</api:usedInEndpoint>
    <rdfs:label>zattrs</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>If provided, the results will be written as COG (cloud optimized GeoTIFFs) and added to the existing collection with the specified identifier. All outputs must be single-band and use the TIFF format. The collection must exist and be compatible -- that is, must contain bands equivalent to the batch request's outputs with the same bit depths. Only one of *createCollection* and *collectinId* may be specified. Requires `"cogOutput"=true`.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>The time when the tile was created in ISO 8601.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics.data__outputs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics.data</api:usedInEndpoint>
    <rdfs:label>outputs</rdfs:label>
    <rdfs:comment>Per output statistics.
Output names are defined in evalscript.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_batch-collectionId.location___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/batch-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest.input.bounds__geometry">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>geometry</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data__path">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data</api:usedInEndpoint>
    <rdfs:label>path</rdfs:label>
    <rdfs:comment>The prefix within the bucket where the Zarr is stored. Must end with '/' but not start with it and must contain a Zarr group.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch.links__previousToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch.links</api:usedInEndpoint>
    <rdfs:label>previousToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId__collectionId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}</api:usedInEndpoint>
    <rdfs:label>collectionId</rdfs:label>
    <rdfs:comment>BYOC collection ID. If given at subscription creation, the data is imported into referenced collection, which must be compatible with the data being subscribed - that is, must either be empty or contain the same bands as the data being subscribed.

If not given at subscription creation, a new BYOC collection is created when the subscription is confirmed and its ID is returned in the response from the `confirm` endpoint.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location_locationId__wmsUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location/{locationId}</api:usedInEndpoint>
    <rdfs:label>wmsUrl</rdfs:label>
    <rdfs:comment>WMS Service url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data__s3Bucket">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data</api:usedInEndpoint>
    <rdfs:label>s3Bucket</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request__instanceType">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request</api:usedInEndpoint>
    <rdfs:label>instanceType</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Unique identifier of the request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data.additionalData.extent__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data.additionalData.extent</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId.geometry__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}.geometry</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data__userActionUpdated">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data</api:usedInEndpoint>
    <rdfs:label>userActionUpdated</rdfs:label>
    <rdfs:comment>Time of last user action update in ISO 8601</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId__bands">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}</api:usedInEndpoint>
    <rdfs:label>bands</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids_id__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids/{id}</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles_tileId.data.tileGeometry__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles/{tileId}.data.tileGeometry</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId.location__processUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>processUrl</rdfs:label>
    <rdfs:comment>Process API url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId.location__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Sentinel Hub deployment location identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.data.request.processRequest.input__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.data.request.processRequest.input</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest.input.bounds__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__error">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>error</rdfs:label>
    <rdfs:comment>Error description for requests that were submitted but failed during analysis or processing</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data.origin.crs.properties__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data.origin.crs.properties</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
    <rdfs:comment>CRS used by the tile, e.g. `urn:ogc:def:crs:EPSG::4326`</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data__created">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>created</rdfs:label>
    <rdfs:comment>The time when the tile was created in ISO 8601.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders_orderId_deliveries__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders/{orderId}/deliveries</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId.origin__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}.origin</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles.data.origin.crs__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles.data.origin.crs</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data.additionalData.extent__coordinates">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data.additionalData.extent</api:usedInEndpoint>
    <rdfs:label>coordinates</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections.data.envelope__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections.data.envelope</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data.additionalData__fromSensingTime">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data.additionalData</api:usedInEndpoint>
    <rdfs:label>fromSensingTime</rdfs:label>
    <rdfs:comment>The sensing time in ISO 8601 of the least recent tile.</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data__additionalData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data</api:usedInEndpoint>
    <rdfs:label>additionalData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.processRequest.input.bounds__properties">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>properties</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Zarr Collection identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_async_process__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/async/process</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>UUID of the submitted request</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_tiles.data__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.links__next">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>next</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId.request.processRequest.input.bounds__bbox">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}.request.processRequest.input.bounds</api:usedInEndpoint>
    <rdfs:label>bbox</rdfs:label>
    <rdfs:comment>The request bounding box. This and/or GEOMETRY must be specified.
Specify with a coordinate pair on two (opposite) vertices of the bounding
box rectangle. Coordinates need to be in easting,northing or longitude, latitude,
in that order in the CRS defined in the "bounds.properties.crs" parameter.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId.location__processUrl">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>processUrl</rdfs:label>
    <rdfs:comment>Process API url</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids_id__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids/{id}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_location___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/location</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process_taskId__instanceType">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process/{taskId}</api:usedInEndpoint>
    <rdfs:label>instanceType</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId__tilingGrid">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}</api:usedInEndpoint>
    <rdfs:label>tilingGrid</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_zarr-collectionId.bands__sampleType">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/zarr-{collectionId}.bands</api:usedInEndpoint>
    <rdfs:label>sampleType</rdfs:label>
    <rdfs:comment>Band sample type</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_statistics_batch.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/statistics/batch.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.links___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.links</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId.processRequest__output">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}.processRequest</api:usedInEndpoint>
    <rdfs:label>output</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId.location___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}.location</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId_arrays.data__s3Bucket">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}/arrays.data</api:usedInEndpoint>
    <rdfs:label>s3Bucket</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process.links__nextToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process.links</api:usedInEndpoint>
    <rdfs:label>nextToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__processRequest">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>processRequest</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data.additionalData.extent__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data.additionalData.extent</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__zattrs">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>zattrs</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_tilinggrids_id__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/tilinggrids/{id}</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.links__currentToken">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.links</api:usedInEndpoint>
    <rdfs:label>currentToken</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data__s3Bucket">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data</api:usedInEndpoint>
    <rdfs:label>s3Bucket</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_orders__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/orders</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.tilingGrid__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.tilingGrid</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Id of one of the supported tiling grids</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections_collectionId_tiles.data__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections/{collectionId}/tiles.data</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_process__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/process</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process_requestId_tiles_tileId__id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process/{requestId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>id</rdfs:label>
    <rdfs:comment>Identifier</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data.additionalData__bands">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data.additionalData</api:usedInEndpoint>
    <rdfs:label>bands</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.output__createCollection">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.output</api:usedInEndpoint>
    <rdfs:label>createCollection</rdfs:label>
    <rdfs:comment>If `true`, the results will be written as COG (cloud optimized GeoTIFFs) and a collection will be automatically created. All outputs must be single-band and use the TIFF format. Only one of *createCollection* and *collectinId* may be specified. Requires `"cogOutput"=true`.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.processRequest.input__data">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.processRequest.input</api:usedInEndpoint>
    <rdfs:label>data</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_deliveries_deliveryId_tiles_tileId__deliveryId">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/deliveries/{deliveryId}/tiles/{tileId}</api:usedInEndpoint>
    <rdfs:label>deliveryId</rdfs:label>
    <rdfs:comment>Tile ID</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_byoc_collections.data__requiresMetadataUpdate">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/byoc/collections.data</api:usedInEndpoint>
    <rdfs:label>requiresMetadataUpdate</rdfs:label>
    <rdfs:comment>Flag if the metadata, found under additionalData, needs to be updated after a tile is added or removed.
Metadata is updated in a few minutes.
</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_collections.data.additionalData.extent__type">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/collections.data.additionalData.extent</api:usedInEndpoint>
    <rdfs:label>type</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.links__previous">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.links</api:usedInEndpoint>
    <rdfs:label>previous</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_zarr_collections_collectionId.data__additionalData">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/zarr/collections/{collectionId}.data</api:usedInEndpoint>
    <rdfs:label>additionalData</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_metadata_collection_byoc-collectionId___id">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/metadata/collection/byoc-{collectionId}</api:usedInEndpoint>
    <rdfs:label>@id</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v2_batch_tilinggrids.data__name">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v2/batch/tilinggrids.data</api:usedInEndpoint>
    <rdfs:label>name</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_batch_process.data.zarrOutput__group">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/batch/process.data.zarrOutput</api:usedInEndpoint>
    <rdfs:label>group</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions__links">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions</api:usedInEndpoint>
    <rdfs:label>links</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId_cancel__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}/cancel</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
    <rdfs:comment>Specification of the subscribed data</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions_subscriptionId__status">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions/{subscriptionId}</api:usedInEndpoint>
    <rdfs:label>status</rdfs:label>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions__input">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions</api:usedInEndpoint>
    <rdfs:label>input</rdfs:label>
    <rdfs:comment>Specification of the subscribed data</rdfs:comment>
  </rdf:Description>
  <rdf:Description rdf:about="http://example.com/api#field__api_v1_dataimport_subscriptions.data__sqkm">
    <rdf:type rdf:resource="http://example.com/api#Field"/>
    <api:usedInEndpoint>/api/v1/dataimport/subscriptions.data</api:usedInEndpoint>
    <rdfs:label>sqkm</rdfs:label>
    <rdfs:comment>Area of the subscriptions's `input.bounds` in km&lt;sup&gt;2&lt;/sup&gt;</rdfs:comment>
  </rdf:Description>
</rdf:RDF>
